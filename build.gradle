apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    group = 'core.practice'
    version = '1.0.0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
            content {
                includeGroup 'core.framework'
            }
        }
    }
}

def coreNGVersion = '7.3.0'
def mysqlVersion = '8.0.19'

configure(project(':painter-service-interface')) {
    dependencies {
        implementation "core.framework:core-ng-api:${coreNGVersion}"
    }
}
configure(project(':painter-service')) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
        testImplementation "core.framework:core-ng-test:${coreNGVersion}"
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
    }
}

//when you build a simple project, you can put your module dependencies in one place only
project(':painter-service') {
    dependencies {
        implementation project(':painter-service-interface')
    }
}

//when you build a complex project, you can configure your module like this:
//configure common outer dependencies
//module use db
//configure([...projects]){
//apply from: file("${rootDir}/gradle/app.gradle")
//dependencies {
//    runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
//}
//}
//module use mongo
//configure([...projects]){
//apply from: file("${rootDir}/gradle/app.gradle")
//dependencies {
//    implementation "core.framework:core-ng-mongo:${coreNGVersion}"
//}
//}
//and define specific dependencies for your module
//project(':a') {
//    dependencies {
//        implementation project(':painter-service-interface')
//    }
//}
//project(':b') {
//    dependencies {
//        implementation project(':painter-service-interface')
//        implementation project(':xxx')
//        implementation project(':yyy')
//        implementation project(':zzz')
//    }
//}